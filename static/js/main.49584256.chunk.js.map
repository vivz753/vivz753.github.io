{"version":3,"sources":["logo.svg","context/index.js","constants/index.js","layout/MySider.js","helpers/index.js","pages/about/Cube.js","pages/about/Bio.js","layout/MyPages.js","layout/MyContent.js","layout/MyLayout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SelectedMenuItemContext","createContext","SelectedMenuItemProvider","children","useState","selectedMenuItem","setSelectedMenuItem","selectedSiderGroup","setSelectedSiderGroup","selectedSiderItem","setSelectedSiderItem","contentPage","setContentPage","Provider","value","useSelectedMenuItemValue","useContext","MenuItems","key","name","AboutItems","icon","ProjectItems","submenu","Sider","Layout","SubMenu","Menu","MySider","sideMenuItems","console","log","width","style","background","mode","defaultSelectedKeys","defaultOpenKeys","selectedKeys","height","textAlign","onClick","itemKey","find","item","subitem","map","title","type","onTitleClick","Item","Cube","sceneSetup","mount","clientWidth","clientHeight","scene","THREE","camera","position","z","controls","OrbitControls","renderer","setSize","appendChild","domElement","addCustomSceneObjects","geometry","material","color","emissive","side","flatShading","cube","add","lights","set","startAnimationLoop","rotation","x","y","render","requestID","window","requestAnimationFrame","handleWindowResize","aspect","updateProjectionMatrix","this","ref","Component","Title","Typography","Paragraph","Bio","Text","gutter","span","size","src","Content","MyPages","padding","minHeight","frameborder","allow","allowfullscreen","frameBorder","MyContent","siderGroupName","menuName","siderItemName","groupKey","siderGroup","siderItem","getProjectName","margin","Header","Footer","MyLayout","className","lineHeight","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49584256.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {createContext, useContext, useState } from 'react';\n\nexport const SelectedMenuItemContext = createContext();\nexport const SelectedMenuItemProvider = ({children}) => {\n  // set the defaults here\n  const [ selectedMenuItem, setSelectedMenuItem ] = useState('ABOUT');\n  const [ selectedSiderGroup, setSelectedSiderGroup ] = useState('');\n  const [ selectedSiderItem, setSelectedSiderItem ] = useState('BIO');\n  const [ contentPage, setContentPage ] = useState('BIO');\n\n  return (\n    <SelectedMenuItemContext.Provider value={{\n      selectedMenuItem, setSelectedMenuItem, \n      selectedSiderGroup, setSelectedSiderGroup, \n      selectedSiderItem, setSelectedSiderItem, \n      contentPage, setContentPage\n    }}>\n      {children}\n    </SelectedMenuItemContext.Provider>\n  )\n};\n\nexport const useSelectedMenuItemValue = () => useContext(SelectedMenuItemContext);","export const MenuItems = [\n  {key: 'ABOUT', name: 'About'},\n  {key: 'PROJECTS', name: 'Projects'},\n]\n\nexport const AboutItems = [\n  {key: 'BIO', name: 'Bio', icon: 'user'},\n  {key: 'RESUME', name: 'Resume', icon: 'solution'},\n  {key: 'CUBE', name: 'Cube', icon: 'codepen'},\n\n]\n\nexport const ProjectItems = [\n  {\n    key: 'WEBAPPS', \n    name: 'Web Apps', \n    icon: 'laptop',\n    submenu: [\n      { key: 'TODOIST', name: 'Todoist: Check List'},\n      { key: 'BUNKER', name: 'Bunker: Hotel Booking'},\n      // { key: 'PORT69', name: 'Port69 Portal'},\n    ]\n  },\n  {\n    key: '2D/3D', \n    name: '2D/3D', \n    icon: 'picture',\n    submenu: [\n      { key: 'PUMPKINCAT', name: 'Pumpkin Cat & the Skulls'},\n      { key: 'OCTREE', name: 'Raytracing in 3D using an Octree'},\n      { key: 'UNBARRELBLE', name: 'Unbarrelble: A 3D Unity Game'}\n    ]\n  },\n]","import React from 'react';\nimport { useSelectedMenuItemValue } from '../context';\nimport { ProjectItems, AboutItems } from '../constants';\nimport { getProjectGroupOf } from '../helpers';\n\n\nimport { Layout, Menu, Icon } from 'antd';\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport const MySider = () => {\n\n  const {selectedMenuItem, selectedSiderGroup, setSelectedSiderGroup, selectedSiderItem, setSelectedSiderItem, setContentPage} = useSelectedMenuItemValue();\n\n  let sideMenuItems = [];\n  selectedMenuItem === 'PROJECTS' ? sideMenuItems = ProjectItems : sideMenuItems = AboutItems;\n\n  console.log(selectedMenuItem);\n  console.log(selectedSiderGroup);\n  console.log(selectedSiderItem);\n  return (\n    <Sider width={300} style={{ background: '#fff' }}>\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={[selectedSiderItem]}\n          defaultOpenKeys={[selectedSiderGroup]}\n          selectedKeys={[selectedSiderItem, ]}\n          style={{ height: '100%',  textAlign: 'left' }}\n          onClick={({key}) => {\n            selectedMenuItem === 'PROJECTS' && setSelectedSiderGroup(getProjectGroupOf(key).key); \n            setSelectedSiderItem(key);\n            setContentPage(key);\n          }}\n        >\n        {selectedMenuItem === 'PROJECTS' && sideMenuItems.map(item => {\n          return (\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <Icon type={item.icon} />\n                  {item.name}\n                </span>\n              }\n              onTitleClick={({key}) => {\n                setSelectedSiderGroup(key);\n                setSelectedSiderItem('')\n                // key !== selectedSiderGroup && setSelectedSiderItem('');\n              }}\n            >\n              {item.submenu.map(item => {\n                return (\n                  <Menu.Item key={item.key}>{item.name}</Menu.Item>\n                )\n              })}\n            </SubMenu>\n\n          )\n        })}\n\n        {selectedMenuItem === 'ABOUT' && sideMenuItems.map(item => {\n          return (\n            <Menu.Item \n              key={item.key}\n            >\n               <Icon type={item.icon} />\n              {item.name}\n            </Menu.Item>\n          )\n        })\n\n        }\n        </Menu>\n      </Sider>\n  )\n}","import { MenuItems, ProjectItems, AboutItems } from '../constants';\n\n// returns the name of the nav item\nexport const getMenuName = (key) => {\n  let found = MenuItems.find(item => item.key === key)\n  return found.name;\n}\n\n// returns the name of the selected sider group and sider item from Projects nav\nexport const getProjectName = (groupKey, itemKey) => {\n\n  // group key always exists thanks to getProjectGroupOf which is called everytime a menu itme is clicked\n  let siderGroup = ProjectItems.find(item => item.key === groupKey)\n    // groupKey ? \n    // ProjectItems.find(item => item.key === groupKey) : \n    // itemKey ? \n    // ProjectItems.find(item => item.submenu.find (subitem => subitem.key === itemKey)) : \n    // '';\n\n  // \n  let siderItem =\n    groupKey && itemKey ? \n    siderGroup.submenu.find(item => item.key === itemKey) :\n    '';\n\n  let siderGroupName = siderGroup ? siderGroup.name : ''; \n  let siderItemName = siderItem ? siderItem.name : '';\n  \n  return [siderGroupName, siderItemName];\n}\n\n// returns the key of the sider group which the sider item belongs to in the Projects nav\nexport const getProjectGroupOf = (itemKey) => {\n  return ProjectItems.find(item => item.submenu.find (subitem => subitem.key === itemKey));\n}\n\nexport const getAboutItemName = (itemKey) => {\n  return itemKey ? AboutItems.find(item => item.key === itemKey).name : '';\n}","// import React, { Component } from 'react';\nimport * as THREE from \"three\";\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\n\nimport React, { Component } from \"react\";\n\nconst style = {\n    height: '600px', // we can control scene size by setting container dimensions\n    width: '100%'\n  };\n\n\n\nclass Cube extends Component { \n      \n    componentDidMount() {\n\n        this.sceneSetup();\n        this.addCustomSceneObjects();\n        this.startAnimationLoop();\n\n        //check for window resizing\n        // window.addEventListener(\"resize\", this.handleWindowResize);\n\n      }\n\n    sceneSetup = () => {\n        // renderer.setSize( window.innerWidth, window.innerHeight );\n        // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n\n        const width = this.mount.clientWidth;\n        // const width = window.innerWidth;\n        // const height = window.innerHeight/2;\n        const height = this.mount.clientHeight;\n\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(\n            75, // fov = field of view\n            width / height, //aspect ratio\n            0.1, //near plane\n            1000 //far plane\n        );\n\n        // distance from cube located at z = 0 is 5 units (whatever that may be)\n        this.camera.position.z = 5;\n\n        this.controls = new OrbitControls(this.camera, this.mount);\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(width, height);\n        this.mount.appendChild(this.renderer.domElement);\n    }\n\n    addCustomSceneObjects = () => {\n        const geometry = new THREE.BoxGeometry(2, 2, 2);\n        const material = new THREE.MeshPhongMaterial( {\n            color: 0x156289,\n            emissive: 0x072534,\n            side: THREE.DoubleSide,\n            flatShading: true\n        });\n        this.cube = new THREE.Mesh(geometry, material);\n        this.scene.add(this.cube);\n\n        const lights = [];\n        lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n        lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n        lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n        lights[0].position.set(0, 200, 0);\n        lights[1].position.set(100, 200, 100);\n        lights[2].position.set(-100, -200, -100);\n\n        this.scene.add(lights[0]);\n        this.scene.add(lights[1]);\n        this.scene.add(lights[2]);\n    }\n\n    startAnimationLoop = () => {\n        // let the cubes rotate\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n\n        this.renderer.render(this.scene, this.camera);\n        this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n    }\n\n    handleWindowResize = () => {\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n    \n        this.renderer.setSize(width, height);\n        this.camera.aspect = width / height;\n    \n        // Note that after making changes to most of camera properties you have to call\n        // .updateProjectionMatrix for the changes to take effect.\n        this.camera.updateProjectionMatrix();\n      };\n\n    render(){\n\n        // const targetRef = useRef();\n        // console.log(targetRef.current.offSetWidth)\n        // this.setState({\n        //     dimensions: {\n        //       width: targetRef.current.offsetWidth,\n        //       height: targetRef.current.offsetHeight\n        //     },\n        //   });\n\n\n        return(\n            <div style={style} ref={ref => (this.mount = ref)}></div>\n        )\n    }\n}\n\nexport default Cube;","import React from 'react';\nimport { Avatar, Row, Col, Typography, Icon } from 'antd';\n\nconst {Title, Paragraph, Text} = Typography;\n\nexport const Bio = () => {\n  return (\n    <Row gutter={16}>\n      <Col span={8}>\n        <Row>\n          <Avatar size={200} src={process.env.PUBLIC_URL + \"images/profile.jpg\"} />\n        </Row>\n        <Row>\n\n        <Icon type=\"github\" />\n        <Icon type=\"linkedin\" />\n        </Row>\n      </Col>\n      \n      <Col span={16} >\n        <Title>\n          Hi, I'm Vivian\n        </Title>\n        <Paragraph>\n          I graduated from SJSU in 2019 with a B.S. in Software Engineering. I am a front-end developer, and am learning computer graphics on the side. I am passionate about diversity, design, animation and film. *insert some funny jokes and puns here*\n        </Paragraph>\n\n      </Col>\n    </Row>\n  )\n}","import React, {useRef,useLayoutEffect, useEffect, useState} from 'react';\nimport { useSelectedMenuItemValue } from '../context';\nimport Cube from '../pages/about/Cube';\nimport { Bio } from '../pages/about/Bio';\nimport { Layout } from 'antd';\nconst { Content } = Layout;\n\n\nexport const MyPages = () => {\n\n  const { contentPage } = useSelectedMenuItemValue();\n\n  // const targetRef = useRef();\n  // const [dimensions, setDimensions] = useState(null);\n\n  // const ref = useRef(null);\n\n  // console.log(ref.current ? ref.current.offsetWidth : 0)\n  // useEffect(() => {\n  //   const width = ref.current ? ref.current.offsetWidth : 0;\n  //   console.log('width', width);\n  // }, [ref.current]);\n\n\n\n  // // useLayoutEffect(() => {\n  // //   if (targetRef.current) {\n\n  // //     setDimensions({\n  // //       width: targetRef.current.offsetWidth,\n  // //       height: targetRef.current.offsetHeight\n  // //     });\n  // //   }\n  // // }, []);\n\n  // // console.log('dimensions')\n  // // console.log(dimensions)\n\n  return (\n    <Content style={{ padding: '0 24px', minHeight: 280, width: 'calc(100% - 300px)' }}>\n      {/* <div ref={ref}>Hello</div> */}\n      {contentPage === 'CUBE' && <Cube />}\n\n      {contentPage === 'BIO' && <Bio />}\n      {contentPage === 'RESUME' && <div> i'm resume</div>}\n      {contentPage === 'PUMPKINCAT' && <div>\n\n      {/* <iframe src='https://www.youtube.com/embed/E7wJTI-1dvQ'\n        frameBorder='0'\n        allow='autoplay; encrypted-media'\n        allowFullScreen\n        title='video'\n      /> */}\n      <iframe width=\"70%\" height=\"500px\" \n      src=\"https://www.youtube.com/embed/J6qIzKxmW8Y\" \n      frameborder=\"0\" \n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n      allowfullscreen></iframe>\n      </div>}\n      {contentPage === 'OCTREE' && <div> i'm octree</div>}\n      {contentPage === 'UNBARRELBLE' && <div> i'm unbarrelble</div>}\n      {contentPage === 'TODOIST' && \n            <iframe width=\"80%\" height=\"700px\"\n            frameBorder=\"0\"\n            src=\"https://vivz753.github.io/React\"\n            />\n      }\n      {contentPage === 'BUNKER' && \n      <iframe width=\"100%\" height=\"700px\"\n      frameBorder=\"0\"\n      src=\"https://se-165.firebaseapp.com/home\"\n      />\n      }\n    </Content>\n  )\n}","import React from 'react';\nimport { MySider } from './MySider';\nimport { MyPages } from './MyPages';\nimport { getMenuName, getProjectName, getAboutItemName } from '../helpers';\nimport { useSelectedMenuItemValue } from '../context';\nimport { Layout, Breadcrumb } from 'antd';\nconst { Content } = Layout;\n\n\nexport const MyContent = () => {\n  const {selectedMenuItem, selectedSiderGroup, selectedSiderItem} = useSelectedMenuItemValue();\n  \n  const menuName = getMenuName(selectedMenuItem);\n\n  let siderGroupName, siderItemName = '';\n\n  selectedMenuItem === 'PROJECTS' ? \n  [ siderGroupName, siderItemName ] = getProjectName(selectedSiderGroup, selectedSiderItem) : \n  siderItemName = getAboutItemName(selectedSiderItem);\n  \n  return (\n    <Content style={{ padding: '0 50px' }}>\n    <Breadcrumb style={{ margin: '16px 0' }}>\n      {menuName && (<Breadcrumb.Item>{menuName}</Breadcrumb.Item>)}\n      {siderGroupName &&  <Breadcrumb.Item>{siderGroupName}</Breadcrumb.Item>}\n      {siderItemName  && <Breadcrumb.Item>{siderItemName}</Breadcrumb.Item>}\n    </Breadcrumb>\n\n    <Layout style={{ padding: '24px 0', background: '#fff' }}>\n      <MySider />\n      <MyPages />\n    </Layout>\n  </Content>\n  )\n}","import React, {useState} from 'react';\nimport { MyContent } from './MyContent';\nimport { MenuItems } from '../constants';\nimport { useSelectedMenuItemValue } from '../context';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport const MyLayout = () => {\n\nconst { SubMenu } = Menu;\nconst {selectedMenuItem, setSelectedMenuItem, setSelectedSiderGroup, setSelectedSiderItem} = useSelectedMenuItemValue();\n\nreturn (\n<Layout>\n    <Header className=\"header\">\n      <div className=\"logo\" />\n      <Menu\n        mode=\"horizontal\"\n        defaultSelectedKeys={[selectedMenuItem]}\n        style={{ lineHeight: '64px' }}\n        onClick={({key}) => {\n          setSelectedMenuItem(key);\n          setSelectedSiderGroup('');\n          setSelectedSiderItem('');\n        }}\n      >\n        {MenuItems.map(item => {\n          return (\n            <Menu.Item key={item.key}>\n              {item.name}\n            </Menu.Item>\n          )\n        })}\n      </Menu>\n    </Header>\n\n    <MyContent/>\n\n    <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n  </Layout>\n\n)\n\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { MyLayout } from './layout/MyLayout';\nimport { SelectedMenuItemProvider } from './context';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <SelectedMenuItemProvider>   \n        <div className=\"App\">\n          <MyLayout />\n          {/* <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              herp derp. lmao\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://github.com/vivz753\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              github.com/vivz753\n            </a>\n          </header> */}\n        </div>\n      </SelectedMenuItemProvider>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}